// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.1
// source: proto/geminiuserauth/geminiuserauth.proto

package geminiuserauth

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ReFreshTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *ReFreshTokenReq) Reset() {
	*x = ReFreshTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReFreshTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReFreshTokenReq) ProtoMessage() {}

func (x *ReFreshTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReFreshTokenReq.ProtoReflect.Descriptor instead.
func (*ReFreshTokenReq) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{0}
}

func (x *ReFreshTokenReq) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *ReFreshTokenReq) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type ReFreshTokenReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *ReFreshTokenReplyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ReFreshTokenReply) Reset() {
	*x = ReFreshTokenReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReFreshTokenReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReFreshTokenReply) ProtoMessage() {}

func (x *ReFreshTokenReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReFreshTokenReply.ProtoReflect.Descriptor instead.
func (*ReFreshTokenReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{1}
}

func (x *ReFreshTokenReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReFreshTokenReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ReFreshTokenReply) GetData() *ReFreshTokenReplyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ReFreshTokenReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewAccessToken  string `protobuf:"bytes,1,opt,name=new_access_token,json=newAccessToken,proto3" json:"new_access_token,omitempty"`
	TokenExpireTime string `protobuf:"bytes,2,opt,name=token_expire_time,json=tokenExpireTime,proto3" json:"token_expire_time,omitempty"`
}

func (x *ReFreshTokenReplyData) Reset() {
	*x = ReFreshTokenReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReFreshTokenReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReFreshTokenReplyData) ProtoMessage() {}

func (x *ReFreshTokenReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReFreshTokenReplyData.ProtoReflect.Descriptor instead.
func (*ReFreshTokenReplyData) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{2}
}

func (x *ReFreshTokenReplyData) GetNewAccessToken() string {
	if x != nil {
		return x.NewAccessToken
	}
	return ""
}

func (x *ReFreshTokenReplyData) GetTokenExpireTime() string {
	if x != nil {
		return x.TokenExpireTime
	}
	return ""
}

type UserLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserLoginReq) Reset() {
	*x = UserLoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReq) ProtoMessage() {}

func (x *UserLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReq.ProtoReflect.Descriptor instead.
func (*UserLoginReq) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{3}
}

func (x *UserLoginReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserLoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg  string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data *UserLoginReplyData `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserLoginReply) Reset() {
	*x = UserLoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReply) ProtoMessage() {}

func (x *UserLoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReply.ProtoReflect.Descriptor instead.
func (*UserLoginReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{4}
}

func (x *UserLoginReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserLoginReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserLoginReply) GetData() *UserLoginReplyData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserLoginReplyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	UserId       int32  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username     string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	DisplayName  string `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	PhoneNum     string `protobuf:"bytes,6,opt,name=phone_num,json=phoneNum,proto3" json:"phone_num,omitempty"`
	Email        string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UserLoginReplyData) Reset() {
	*x = UserLoginReplyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLoginReplyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLoginReplyData) ProtoMessage() {}

func (x *UserLoginReplyData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLoginReplyData.ProtoReflect.Descriptor instead.
func (*UserLoginReplyData) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{5}
}

func (x *UserLoginReplyData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserLoginReplyData) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *UserLoginReplyData) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserLoginReplyData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserLoginReplyData) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserLoginReplyData) GetPhoneNum() string {
	if x != nil {
		return x.PhoneNum
	}
	return ""
}

func (x *UserLoginReplyData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type GeminiAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ClientName string `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	Url        string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *GeminiAuthRequest) Reset() {
	*x = GeminiAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeminiAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeminiAuthRequest) ProtoMessage() {}

func (x *GeminiAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeminiAuthRequest.ProtoReflect.Descriptor instead.
func (*GeminiAuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{6}
}

func (x *GeminiAuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GeminiAuthRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *GeminiAuthRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GeminiAuthReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLoginSuccess        bool   `protobuf:"varint,1,opt,name=is_login_success,json=isLoginSuccess,proto3" json:"is_login_success,omitempty"`
	IsAuthSuccess         bool   `protobuf:"varint,2,opt,name=is_auth_success,json=isAuthSuccess,proto3" json:"is_auth_success,omitempty"`
	IsCheckLicenseSuccess bool   `protobuf:"varint,3,opt,name=is_check_license_success,json=isCheckLicenseSuccess,proto3" json:"is_check_license_success,omitempty"`
	Msg                   string `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg,omitempty"`
	UserId                int32  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName              string `protobuf:"bytes,6,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *GeminiAuthReply) Reset() {
	*x = GeminiAuthReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeminiAuthReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeminiAuthReply) ProtoMessage() {}

func (x *GeminiAuthReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeminiAuthReply.ProtoReflect.Descriptor instead.
func (*GeminiAuthReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{7}
}

func (x *GeminiAuthReply) GetIsLoginSuccess() bool {
	if x != nil {
		return x.IsLoginSuccess
	}
	return false
}

func (x *GeminiAuthReply) GetIsAuthSuccess() bool {
	if x != nil {
		return x.IsAuthSuccess
	}
	return false
}

func (x *GeminiAuthReply) GetIsCheckLicenseSuccess() bool {
	if x != nil {
		return x.IsCheckLicenseSuccess
	}
	return false
}

func (x *GeminiAuthReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GeminiAuthReply) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GeminiAuthReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type GeminiLoginAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientName string `protobuf:"bytes,1,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	UserName   string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Password   string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GeminiLoginAuthRequest) Reset() {
	*x = GeminiLoginAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeminiLoginAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeminiLoginAuthRequest) ProtoMessage() {}

func (x *GeminiLoginAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeminiLoginAuthRequest.ProtoReflect.Descriptor instead.
func (*GeminiLoginAuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{8}
}

func (x *GeminiLoginAuthRequest) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *GeminiLoginAuthRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GeminiLoginAuthRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type GeminiLoginAuthReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool   `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	UserId    int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GeminiLoginAuthReplay) Reset() {
	*x = GeminiLoginAuthReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeminiLoginAuthReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeminiLoginAuthReplay) ProtoMessage() {}

func (x *GeminiLoginAuthReplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeminiLoginAuthReplay.ProtoReflect.Descriptor instead.
func (*GeminiLoginAuthReplay) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{9}
}

func (x *GeminiLoginAuthReplay) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *GeminiLoginAuthReplay) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GeminiLoginAuthReplay) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PullImageAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *PullImageAuthRequest) Reset() {
	*x = PullImageAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullImageAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImageAuthRequest) ProtoMessage() {}

func (x *PullImageAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImageAuthRequest.ProtoReflect.Descriptor instead.
func (*PullImageAuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{10}
}

func (x *PullImageAuthRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type PullImageAuthReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PullImageAuth bool `protobuf:"varint,1,opt,name=pull_image_auth,json=pullImageAuth,proto3" json:"pull_image_auth,omitempty"`
}

func (x *PullImageAuthReplay) Reset() {
	*x = PullImageAuthReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullImageAuthReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullImageAuthReplay) ProtoMessage() {}

func (x *PullImageAuthReplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullImageAuthReplay.ProtoReflect.Descriptor instead.
func (*PullImageAuthReplay) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{11}
}

func (x *PullImageAuthReplay) GetPullImageAuth() bool {
	if x != nil {
		return x.PullImageAuth
	}
	return false
}

type PushImageAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *PushImageAuthRequest) Reset() {
	*x = PushImageAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushImageAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushImageAuthRequest) ProtoMessage() {}

func (x *PushImageAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushImageAuthRequest.ProtoReflect.Descriptor instead.
func (*PushImageAuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{12}
}

func (x *PushImageAuthRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type PushImageAuthReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PushImageAuth bool   `protobuf:"varint,1,opt,name=push_image_auth,json=pushImageAuth,proto3" json:"push_image_auth,omitempty"`
	Msg           string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PushImageAuthReplay) Reset() {
	*x = PushImageAuthReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushImageAuthReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushImageAuthReplay) ProtoMessage() {}

func (x *PushImageAuthReplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushImageAuthReplay.ProtoReflect.Descriptor instead.
func (*PushImageAuthReplay) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{13}
}

func (x *PushImageAuthReplay) GetPushImageAuth() bool {
	if x != nil {
		return x.PushImageAuth
	}
	return false
}

func (x *PushImageAuthReplay) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type RefreshLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshLicenseRequest) Reset() {
	*x = RefreshLicenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshLicenseRequest) ProtoMessage() {}

func (x *RefreshLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshLicenseRequest.ProtoReflect.Descriptor instead.
func (*RefreshLicenseRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{14}
}

type RefreshLicenseReplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
}

func (x *RefreshLicenseReplay) Reset() {
	*x = RefreshLicenseReplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshLicenseReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshLicenseReplay) ProtoMessage() {}

func (x *RefreshLicenseReplay) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshLicenseReplay.ProtoReflect.Descriptor instead.
func (*RefreshLicenseReplay) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{15}
}

func (x *RefreshLicenseReplay) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type GetUserInfoByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserInfoByIdRequest) Reset() {
	*x = GetUserInfoByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByIdRequest) ProtoMessage() {}

func (x *GetUserInfoByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByIdRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{16}
}

func (x *GetUserInfoByIdRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName      string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	DisplayName   string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email         string `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	Status        int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Source        string `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	CreateTime    string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime    string `protobuf:"bytes,9,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	LastLoginTime string `protobuf:"bytes,10,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	StatusName    string `protobuf:"bytes,11,opt,name=status_name,json=statusName,proto3" json:"status_name,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{17}
}

func (x *UserInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *UserInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserInfo) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UserInfo) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UserInfo) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *UserInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *UserInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *UserInfo) GetLastLoginTime() string {
	if x != nil {
		return x.LastLoginTime
	}
	return ""
}

func (x *UserInfo) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

type GetUserInfoByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo  *UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	IsSuccess bool      `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Err       string    `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetUserInfoByIdReply) Reset() {
	*x = GetUserInfoByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoByIdReply) ProtoMessage() {}

func (x *GetUserInfoByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoByIdReply.ProtoReflect.Descriptor instead.
func (*GetUserInfoByIdReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserInfoByIdReply) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GetUserInfoByIdReply) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *GetUserInfoByIdReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type CheckKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId  int64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *CheckKeyRequest) Reset() {
	*x = CheckKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckKeyRequest) ProtoMessage() {}

func (x *CheckKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckKeyRequest.ProtoReflect.Descriptor instead.
func (*CheckKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{19}
}

func (x *CheckKeyRequest) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *CheckKeyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CheckKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Allow bool `protobuf:"varint,1,opt,name=allow,proto3" json:"allow,omitempty"`
}

func (x *CheckKeyReply) Reset() {
	*x = CheckKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckKeyReply) ProtoMessage() {}

func (x *CheckKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckKeyReply.ProtoReflect.Descriptor instead.
func (*CheckKeyReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{20}
}

func (x *CheckKeyReply) GetAllow() bool {
	if x != nil {
		return x.Allow
	}
	return false
}

type GetKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId int64 `protobuf:"varint,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
}

func (x *GetKeyRequest) Reset() {
	*x = GetKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyRequest) ProtoMessage() {}

func (x *GetKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyRequest.ProtoReflect.Descriptor instead.
func (*GetKeyRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{21}
}

func (x *GetKeyRequest) GetKeyId() int64 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type GetKeyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PubKey string `protobuf:"bytes,1,opt,name=pub_key,json=pubKey,proto3" json:"pub_key,omitempty"`
}

func (x *GetKeyReply) Reset() {
	*x = GetKeyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyReply) ProtoMessage() {}

func (x *GetKeyReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyReply.ProtoReflect.Descriptor instead.
func (*GetKeyReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{22}
}

func (x *GetKeyReply) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

type GetUsersByRoleIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId int64 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *GetUsersByRoleIdRequest) Reset() {
	*x = GetUsersByRoleIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByRoleIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByRoleIdRequest) ProtoMessage() {}

func (x *GetUsersByRoleIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByRoleIdRequest.ProtoReflect.Descriptor instead.
func (*GetUsersByRoleIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{23}
}

func (x *GetUsersByRoleIdRequest) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type GetUsersByRoleIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo  []*UserInfo `protobuf:"bytes,1,rep,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
	IsSuccess bool        `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Err       string      `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetUsersByRoleIdReply) Reset() {
	*x = GetUsersByRoleIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersByRoleIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersByRoleIdReply) ProtoMessage() {}

func (x *GetUsersByRoleIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersByRoleIdReply.ProtoReflect.Descriptor instead.
func (*GetUsersByRoleIdReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{24}
}

func (x *GetUsersByRoleIdReply) GetUserInfo() []*UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *GetUsersByRoleIdReply) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *GetUsersByRoleIdReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type GetRolesInfoByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId []int32 `protobuf:"varint,1,rep,packed,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
}

func (x *GetRolesInfoByIdRequest) Reset() {
	*x = GetRolesInfoByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesInfoByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesInfoByIdRequest) ProtoMessage() {}

func (x *GetRolesInfoByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesInfoByIdRequest.ProtoReflect.Descriptor instead.
func (*GetRolesInfoByIdRequest) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{25}
}

func (x *GetRolesInfoByIdRequest) GetRoleId() []int32 {
	if x != nil {
		return x.RoleId
	}
	return nil
}

type RoleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleId      int32  `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	RoleName    string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CreateTime  string `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	UpdateTime  string `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	CreateId    int64  `protobuf:"varint,6,opt,name=create_id,json=createId,proto3" json:"create_id,omitempty"`
	UpdateId    int64  `protobuf:"varint,7,opt,name=update_id,json=updateId,proto3" json:"update_id,omitempty"`
}

func (x *RoleInfo) Reset() {
	*x = RoleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleInfo) ProtoMessage() {}

func (x *RoleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleInfo.ProtoReflect.Descriptor instead.
func (*RoleInfo) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{26}
}

func (x *RoleInfo) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *RoleInfo) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RoleInfo) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *RoleInfo) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *RoleInfo) GetCreateId() int64 {
	if x != nil {
		return x.CreateId
	}
	return 0
}

func (x *RoleInfo) GetUpdateId() int64 {
	if x != nil {
		return x.UpdateId
	}
	return 0
}

type GetRolesInfoByIdReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoleInfo  []*RoleInfo `protobuf:"bytes,1,rep,name=role_info,json=roleInfo,proto3" json:"role_info,omitempty"`
	IsSuccess bool        `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	Err       string      `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *GetRolesInfoByIdReply) Reset() {
	*x = GetRolesInfoByIdReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRolesInfoByIdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRolesInfoByIdReply) ProtoMessage() {}

func (x *GetRolesInfoByIdReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRolesInfoByIdReply.ProtoReflect.Descriptor instead.
func (*GetRolesInfoByIdReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{27}
}

func (x *GetRolesInfoByIdReply) GetRoleInfo() []*RoleInfo {
	if x != nil {
		return x.RoleInfo
	}
	return nil
}

func (x *GetRolesInfoByIdReply) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *GetRolesInfoByIdReply) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

type UserInfoListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UidList     []int64 `protobuf:"varint,1,rep,packed,name=uid_list,json=uidList,proto3" json:"uid_list,omitempty"`
	Search      string  `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	DisplayName string  `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
}

func (x *UserInfoListReq) Reset() {
	*x = UserInfoListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoListReq) ProtoMessage() {}

func (x *UserInfoListReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoListReq.ProtoReflect.Descriptor instead.
func (*UserInfoListReq) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{28}
}

func (x *UserInfoListReq) GetUidList() []int64 {
	if x != nil {
		return x.UidList
	}
	return nil
}

func (x *UserInfoListReq) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *UserInfoListReq) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type UserInfoListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string                  `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Code int64                   `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Data *UserInfoListReply_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserInfoListReply) Reset() {
	*x = UserInfoListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoListReply) ProtoMessage() {}

func (x *UserInfoListReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoListReply.ProtoReflect.Descriptor instead.
func (*UserInfoListReply) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{29}
}

func (x *UserInfoListReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserInfoListReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserInfoListReply) GetData() *UserInfoListReply_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserInfoListReply_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfoList []*UserInfo `protobuf:"bytes,1,rep,name=user_info_list,json=userInfoList,proto3" json:"user_info_list,omitempty"`
}

func (x *UserInfoListReply_Data) Reset() {
	*x = UserInfoListReply_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfoListReply_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfoListReply_Data) ProtoMessage() {}

func (x *UserInfoListReply_Data) ProtoReflect() protoreflect.Message {
	mi := &file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfoListReply_Data.ProtoReflect.Descriptor instead.
func (*UserInfoListReply_Data) Descriptor() ([]byte, []int) {
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP(), []int{29, 0}
}

func (x *UserInfoListReply_Data) GetUserInfoList() []*UserInfo {
	if x != nil {
		return x.UserInfoList
	}
	return nil
}

var File_proto_geminiuserauth_geminiuserauth_proto protoreflect.FileDescriptor

var file_proto_geminiuserauth_geminiuserauth_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73,
	0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65,
	0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x67, 0x65, 0x6d,
	0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x22, 0x59, 0x0a, 0x0f, 0x52,
	0x65, 0x46, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x74, 0x0a, 0x11, 0x52, 0x65, 0x46, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x52, 0x65, 0x46, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x15,
	0x52, 0x65, 0x46, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6e, 0x65, 0x77, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x46, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x6e, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x65, 0x6d, 0x69,
	0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0xda, 0x01, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0xe4,
	0x01, 0x0a, 0x0f, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x16, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x61, 0x0a, 0x15, 0x47, 0x65, 0x6d,
	0x69, 0x6e, 0x69, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x14,
	0x50, 0x75, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3d, 0x0a, 0x13, 0x50, 0x75, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x75, 0x6c, 0x6c,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x70, 0x75, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x22, 0x33, 0x0a, 0x14, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4f, 0x0a, 0x13, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x75, 0x73, 0x68, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x75, 0x73, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x17, 0x0a, 0x15, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x35, 0x0a, 0x14, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x31, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xca, 0x02, 0x0a, 0x08, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x7e, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x41, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x22, 0x26, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x26, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x75, 0x62, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x22, 0x32, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x32, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0xde, 0x01, 0x0a, 0x08, 0x52, 0x6f,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x35, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75,
	0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0x67, 0x0a, 0x0f, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x19,
	0x0a, 0x08, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xbd, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x3a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x46, 0x0a, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x32, 0x9d, 0x09, 0x0a, 0x0a, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x52, 0x0a, 0x0a, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x21, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75,
	0x74, 0x68, 0x2e, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65,
	0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x0f, 0x47, 0x65, 0x6d, 0x69, 0x6e,
	0x69, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x12, 0x26, 0x2e, 0x67, 0x65, 0x6d,
	0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x6d, 0x69,
	0x6e, 0x69, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x50,
	0x75, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x24, 0x2e, 0x67,
	0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x75,
	0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61,
	0x75, 0x74, 0x68, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x0d, 0x50, 0x75, 0x73,
	0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x24, 0x2e, 0x67, 0x65, 0x6d,
	0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x50, 0x75, 0x73, 0x68,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0e, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x67, 0x65, 0x6d, 0x69,
	0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74,
	0x68, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x67, 0x65,
	0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x27, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e,
	0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x42, 0x79, 0x52, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x64, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x27, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73,
	0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x4b, 0x65, 0x79, 0x12, 0x1f, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72,
	0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65,
	0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12,
	0x1d, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x52, 0x0a,
	0x0c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e,
	0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21,
	0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4b, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c,
	0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x67,
	0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x0c, 0x52, 0x65, 0x46, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f,
	0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x2e,
	0x52, 0x65, 0x46, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a,
	0x21, 0x2e, 0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x52, 0x65, 0x46, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x76,
	0x69, 0x72, 0x74, 0x61, 0x69, 0x74, 0x65, 0x63, 0x68, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x65,
	0x6d, 0x69, 0x6e, 0x69, 0x2d, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6d, 0x69, 0x6e, 0x69, 0x75, 0x73, 0x65, 0x72, 0x61, 0x75, 0x74, 0x68, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_geminiuserauth_geminiuserauth_proto_rawDescOnce sync.Once
	file_proto_geminiuserauth_geminiuserauth_proto_rawDescData = file_proto_geminiuserauth_geminiuserauth_proto_rawDesc
)

func file_proto_geminiuserauth_geminiuserauth_proto_rawDescGZIP() []byte {
	file_proto_geminiuserauth_geminiuserauth_proto_rawDescOnce.Do(func() {
		file_proto_geminiuserauth_geminiuserauth_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_geminiuserauth_geminiuserauth_proto_rawDescData)
	})
	return file_proto_geminiuserauth_geminiuserauth_proto_rawDescData
}

var file_proto_geminiuserauth_geminiuserauth_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_proto_geminiuserauth_geminiuserauth_proto_goTypes = []interface{}{
	(*ReFreshTokenReq)(nil),         // 0: geminiuserauth.ReFreshTokenReq
	(*ReFreshTokenReply)(nil),       // 1: geminiuserauth.ReFreshTokenReply
	(*ReFreshTokenReplyData)(nil),   // 2: geminiuserauth.ReFreshTokenReplyData
	(*UserLoginReq)(nil),            // 3: geminiuserauth.UserLoginReq
	(*UserLoginReply)(nil),          // 4: geminiuserauth.UserLoginReply
	(*UserLoginReplyData)(nil),      // 5: geminiuserauth.UserLoginReplyData
	(*GeminiAuthRequest)(nil),       // 6: geminiuserauth.GeminiAuthRequest
	(*GeminiAuthReply)(nil),         // 7: geminiuserauth.GeminiAuthReply
	(*GeminiLoginAuthRequest)(nil),  // 8: geminiuserauth.GeminiLoginAuthRequest
	(*GeminiLoginAuthReplay)(nil),   // 9: geminiuserauth.GeminiLoginAuthReplay
	(*PullImageAuthRequest)(nil),    // 10: geminiuserauth.PullImageAuthRequest
	(*PullImageAuthReplay)(nil),     // 11: geminiuserauth.PullImageAuthReplay
	(*PushImageAuthRequest)(nil),    // 12: geminiuserauth.PushImageAuthRequest
	(*PushImageAuthReplay)(nil),     // 13: geminiuserauth.PushImageAuthReplay
	(*RefreshLicenseRequest)(nil),   // 14: geminiuserauth.RefreshLicenseRequest
	(*RefreshLicenseReplay)(nil),    // 15: geminiuserauth.RefreshLicenseReplay
	(*GetUserInfoByIdRequest)(nil),  // 16: geminiuserauth.GetUserInfoByIdRequest
	(*UserInfo)(nil),                // 17: geminiuserauth.UserInfo
	(*GetUserInfoByIdReply)(nil),    // 18: geminiuserauth.GetUserInfoByIdReply
	(*CheckKeyRequest)(nil),         // 19: geminiuserauth.CheckKeyRequest
	(*CheckKeyReply)(nil),           // 20: geminiuserauth.CheckKeyReply
	(*GetKeyRequest)(nil),           // 21: geminiuserauth.GetKeyRequest
	(*GetKeyReply)(nil),             // 22: geminiuserauth.GetKeyReply
	(*GetUsersByRoleIdRequest)(nil), // 23: geminiuserauth.GetUsersByRoleIdRequest
	(*GetUsersByRoleIdReply)(nil),   // 24: geminiuserauth.GetUsersByRoleIdReply
	(*GetRolesInfoByIdRequest)(nil), // 25: geminiuserauth.GetRolesInfoByIdRequest
	(*RoleInfo)(nil),                // 26: geminiuserauth.RoleInfo
	(*GetRolesInfoByIdReply)(nil),   // 27: geminiuserauth.GetRolesInfoByIdReply
	(*UserInfoListReq)(nil),         // 28: geminiuserauth.UserInfoListReq
	(*UserInfoListReply)(nil),       // 29: geminiuserauth.UserInfoListReply
	(*UserInfoListReply_Data)(nil),  // 30: geminiuserauth.UserInfoListReply.Data
}
var file_proto_geminiuserauth_geminiuserauth_proto_depIdxs = []int32{
	2,  // 0: geminiuserauth.ReFreshTokenReply.data:type_name -> geminiuserauth.ReFreshTokenReplyData
	5,  // 1: geminiuserauth.UserLoginReply.data:type_name -> geminiuserauth.UserLoginReplyData
	17, // 2: geminiuserauth.GetUserInfoByIdReply.user_info:type_name -> geminiuserauth.UserInfo
	17, // 3: geminiuserauth.GetUsersByRoleIdReply.user_info:type_name -> geminiuserauth.UserInfo
	26, // 4: geminiuserauth.GetRolesInfoByIdReply.role_info:type_name -> geminiuserauth.RoleInfo
	30, // 5: geminiuserauth.UserInfoListReply.data:type_name -> geminiuserauth.UserInfoListReply.Data
	17, // 6: geminiuserauth.UserInfoListReply.Data.user_info_list:type_name -> geminiuserauth.UserInfo
	6,  // 7: geminiuserauth.GeminiAuth.GeminiAuth:input_type -> geminiuserauth.GeminiAuthRequest
	8,  // 8: geminiuserauth.GeminiAuth.GeminiLoginAuth:input_type -> geminiuserauth.GeminiLoginAuthRequest
	10, // 9: geminiuserauth.GeminiAuth.PullImageAuth:input_type -> geminiuserauth.PullImageAuthRequest
	12, // 10: geminiuserauth.GeminiAuth.PushImageAuth:input_type -> geminiuserauth.PushImageAuthRequest
	14, // 11: geminiuserauth.GeminiAuth.RefreshLicense:input_type -> geminiuserauth.RefreshLicenseRequest
	16, // 12: geminiuserauth.GeminiAuth.GetUserInfoById:input_type -> geminiuserauth.GetUserInfoByIdRequest
	23, // 13: geminiuserauth.GeminiAuth.GetUsersByRoleId:input_type -> geminiuserauth.GetUsersByRoleIdRequest
	25, // 14: geminiuserauth.GeminiAuth.GetRolesInfoById:input_type -> geminiuserauth.GetRolesInfoByIdRequest
	19, // 15: geminiuserauth.GeminiAuth.CheckKey:input_type -> geminiuserauth.CheckKeyRequest
	21, // 16: geminiuserauth.GeminiAuth.GetKey:input_type -> geminiuserauth.GetKeyRequest
	28, // 17: geminiuserauth.GeminiAuth.UserInfoList:input_type -> geminiuserauth.UserInfoListReq
	3,  // 18: geminiuserauth.GeminiAuth.UserLogin:input_type -> geminiuserauth.UserLoginReq
	0,  // 19: geminiuserauth.GeminiAuth.ReFreshToken:input_type -> geminiuserauth.ReFreshTokenReq
	7,  // 20: geminiuserauth.GeminiAuth.GeminiAuth:output_type -> geminiuserauth.GeminiAuthReply
	9,  // 21: geminiuserauth.GeminiAuth.GeminiLoginAuth:output_type -> geminiuserauth.GeminiLoginAuthReplay
	11, // 22: geminiuserauth.GeminiAuth.PullImageAuth:output_type -> geminiuserauth.PullImageAuthReplay
	13, // 23: geminiuserauth.GeminiAuth.PushImageAuth:output_type -> geminiuserauth.PushImageAuthReplay
	15, // 24: geminiuserauth.GeminiAuth.RefreshLicense:output_type -> geminiuserauth.RefreshLicenseReplay
	18, // 25: geminiuserauth.GeminiAuth.GetUserInfoById:output_type -> geminiuserauth.GetUserInfoByIdReply
	24, // 26: geminiuserauth.GeminiAuth.GetUsersByRoleId:output_type -> geminiuserauth.GetUsersByRoleIdReply
	27, // 27: geminiuserauth.GeminiAuth.GetRolesInfoById:output_type -> geminiuserauth.GetRolesInfoByIdReply
	20, // 28: geminiuserauth.GeminiAuth.CheckKey:output_type -> geminiuserauth.CheckKeyReply
	22, // 29: geminiuserauth.GeminiAuth.GetKey:output_type -> geminiuserauth.GetKeyReply
	29, // 30: geminiuserauth.GeminiAuth.UserInfoList:output_type -> geminiuserauth.UserInfoListReply
	4,  // 31: geminiuserauth.GeminiAuth.UserLogin:output_type -> geminiuserauth.UserLoginReply
	1,  // 32: geminiuserauth.GeminiAuth.ReFreshToken:output_type -> geminiuserauth.ReFreshTokenReply
	20, // [20:33] is the sub-list for method output_type
	7,  // [7:20] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_geminiuserauth_geminiuserauth_proto_init() }
func file_proto_geminiuserauth_geminiuserauth_proto_init() {
	if File_proto_geminiuserauth_geminiuserauth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReFreshTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReFreshTokenReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReFreshTokenReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLoginReplyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeminiAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeminiAuthReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeminiLoginAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GeminiLoginAuthReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullImageAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullImageAuthReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushImageAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushImageAuthReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshLicenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshLicenseReplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByRoleIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersByRoleIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesInfoByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRolesInfoByIdReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_geminiuserauth_geminiuserauth_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfoListReply_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_geminiuserauth_geminiuserauth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_geminiuserauth_geminiuserauth_proto_goTypes,
		DependencyIndexes: file_proto_geminiuserauth_geminiuserauth_proto_depIdxs,
		MessageInfos:      file_proto_geminiuserauth_geminiuserauth_proto_msgTypes,
	}.Build()
	File_proto_geminiuserauth_geminiuserauth_proto = out.File
	file_proto_geminiuserauth_geminiuserauth_proto_rawDesc = nil
	file_proto_geminiuserauth_geminiuserauth_proto_goTypes = nil
	file_proto_geminiuserauth_geminiuserauth_proto_depIdxs = nil
}
